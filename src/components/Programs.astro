---
import { programs, getProgramsByCategory } from '../data/programs.js';

const slapbPrograms = getProgramsByCategory('SLAPB');
const sldnPrograms = getProgramsByCategory('SLDN');
---

<section id="programs" class="section">
  <div class="container">
    <div class="section-header text-center">
      <h2 class="fade-in">Our Programs</h2>
      <p class="fade-in">Comprehensive skill development programs from SKM Level 3 to DKM Level 4</p>
    </div>

    <div class="programs-content">
      <!-- SLAPB Programs -->
      <div class="program-category fade-in">
        <div class="category-header">
          <h3>Institution-Based Training (SLAPB)</h3>
          <p>Sijil Kemahiran Malaysia (SKM) Level 3 Programs</p>
        </div>

        <div class="programs-grid grid grid-3">
          {slapbPrograms.map((program) => (
            <div class="program-card" data-program-id={program.id}>
              <div class="program-image">
                <img src={program.image} alt={`${program.name} Program`} loading="lazy" />
                <div class="program-overlay">
                  <div class="overlay-content">
                    <svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                    </svg>
                    <span>View Details</span>
                  </div>
                </div>
              </div>
              <div class="program-content">
                <div class="program-header">
                  <h4>{program.name}</h4>
                  <span class="program-level">{program.level}</span>
                </div>
                {program.code && (
                  <div class="program-code">
                    <span>Code: {program.code}</span>
                  </div>
                )}
                <p class="program-description">{program.shortDescription}</p>
                <div class="program-features">
                  {program.features.slice(0, 3).map((feature) => (
                    <div class="feature-item">
                      <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                      </svg>
                      <span>{feature}</span>
                    </div>
                  ))}
                </div>
                <div class="program-duration">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                  </svg>
                  <span>{program.duration}</span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- SLDN Programs -->
      <div class="program-category fade-in">
        <div class="category-header">
          <h3>Industry-Based Training (SLDN)</h3>
          <p>Diploma Kemahiran Malaysia (DKM) Level 4 Programs</p>
        </div>

        <div class="programs-grid grid grid-3">
          {sldnPrograms.map((program) => (
            <div class="program-card" data-program-id={program.id}>
              <div class="program-image">
                <img src={program.image} alt={`${program.name} Program`} loading="lazy" />
                <div class="program-overlay">
                  <div class="overlay-content">
                    <svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                    </svg>
                    <span>View Details</span>
                  </div>
                </div>
              </div>
              <div class="program-content">
                <div class="program-header">
                  <h4>{program.name}</h4>
                  <span class="program-level">{program.level}</span>
                </div>
                {program.code && (
                  <div class="program-code">
                    <span>Code: {program.code}</span>
                  </div>
                )}
                <p class="program-description">{program.shortDescription}</p>
                <div class="program-features">
                  {program.features.slice(0, 3).map((feature) => (
                    <div class="feature-item">
                      <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                      </svg>
                      <span>{feature}</span>
                    </div>
                  ))}
                </div>
                <div class="program-duration">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                  </svg>
                  <span>{program.duration}</span>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- PB-PPT Section -->
      <div class="program-category fade-in">
        <div class="category-header">
          <h3>Recognition of Prior Learning (PB-PPT)</h3>
          <p>Assessment Centre for Prior Learning Recognition</p>
        </div>

        <div class="ppt-content">
          <div class="ppt-card">
            <div class="ppt-icon">
              <svg width="64" height="64" viewBox="0 0 24 24" fill="currentColor">
                <path d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
              </svg>
            </div>
            <div class="ppt-content-text">
              <h4>Pengiktirafan Pembelajaran Berasaskan Pengalaman Terdahulu</h4>
              <p>
                ATUR is recognized as an Assessment Centre for Prior Learning (PB-PPT), 
                allowing individuals to gain formal recognition for skills and knowledge 
                acquired through work experience and informal learning.
              </p>
              <div class="ppt-features">
                <div class="ppt-feature">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                  </svg>
                  <span>Skills Assessment</span>
                </div>
                <div class="ppt-feature">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                  </svg>
                  <span>Experience Recognition</span>
                </div>
                <div class="ppt-feature">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                  </svg>
                  <span>Formal Certification</span>
                </div>
              </div>

              <!-- PB-PPT Programs List -->
              <div class="ppt-programs">
                <h5>Available PB-PPT Programs:</h5>
                <div class="ppt-programs-grid">
                  <div class="ppt-program-item">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
                    </svg>
                    <span>Early Childhood Education</span>
                  </div>
                  <div class="ppt-program-item">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
                    </svg>
                    <span>Preschool Education</span>
                  </div>
                  <div class="ppt-program-item">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h2m4-12h2a2 2 0 012 2v10a2 2 0 01-2 2h-2m-4-12a2 2 0 002 2v8a2 2 0 01-2 2m-4-12v12"/>
                    </svg>
                    <span>Administrative Management</span>
                  </div>
                  <div class="ppt-program-item">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                    </svg>
                    <span>Graphic Design</span>
                  </div>
                  <div class="ppt-program-item">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                    </svg>
                    <span>Interactive Multimedia Design</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- PB-PPT General Application Requirements -->
          <div class="ppt-requirements">
            <div class="requirements-header">
              <h4>PB-PPT General Application Requirements</h4>
            </div>
            <div class="requirements-content">
              <ul class="requirements-list">
                <li>Meet the prerequisites outlined in the Standard (NOSS)</li>
                <li>Have SKM at a lower level to obtain a higher SKM in the same program</li>
                <li>Have work experience in the skill field at the level applied</li>
                <li>Not allowed to apply for the same program if you already have SKM/DKM/DLKM for that program</li>
              </ul>
            </div>
          </div>

          <!-- PB-PPT Application Requirements Table -->
          <div class="ppt-table-section">
            <div class="table-header">
              <h4>PB-PPT Application Requirements</h4>
            </div>
            <div class="table-container">
              <table class="requirements-table">
                <thead>
                  <tr>
                    <th>Age</th>
                    <th>Type of Certification</th>
                    <th>Duration of Experience</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td rowspan="4" class="age-cell">
                      <div class="age-group">
                        <div class="age-icon">
                          <svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                          </svg>
                        </div>
                        <span>Age ≥ 17 year</span>
                      </div>
                    </td>
                    <td>Micro Credential (CU/NCS) - PC</td>
                    <td>≥ 1 year</td>
                  </tr>
                  <tr>
                    <td>SKM 1</td>
                    <td>≥ 1 year</td>
                  </tr>
                  <tr>
                    <td>SKM 2</td>
                    <td>≥ 2 year</td>
                  </tr>
                  <tr>
                    <td>SKM 3</td>
                    <td>≥ 3 year</td>
                  </tr>
                  <tr>
                    <td rowspan="2" class="age-cell">
                      <div class="age-group">
                        <div class="age-icon">
                          <svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                          </svg>
                        </div>
                        <span>Age ≥ 21 year</span>
                      </div>
                    </td>
                    <td>DKM</td>
                    <td>≥ 5 year</td>
                  </tr>
                  <tr>
                    <td>DKM TVET-I</td>
                    <td>
                      <div class="experience-details">
                        <div>≥ 5 year teaching experience in TVET</div>
                        <div>Have a TVET-I intensive course certificate from CIAST</div>
                      </div>
                    </td>
                  </tr>
                  <tr>
                    <td rowspan="2" class="age-cell">
                      <div class="age-group">
                        <div class="age-icon">
                          <svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                          </svg>
                        </div>
                        <span>Age ≥ 23 year</span>
                      </div>
                    </td>
                    <td>DLKM</td>
                    <td>≥ 7 year</td>
                  </tr>
                  <tr>
                    <td>DLKM TVET - M</td>
                    <td>Have a TVET I + 2 year teaching experience in TVET</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <!-- Call to Action -->
      <div class="programs-cta fade-in">
        <div class="cta-content">
          <h3>Ready to Start Your Journey?</h3>
          <p>Choose from our comprehensive range of programs and take the first step towards your professional development.</p>
          <div class="cta-buttons">
            <a href="#contact" class="btn btn-primary btn-lg">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <path d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
              </svg>
              Apply Now
            </a>
            <a href="https://wa.me/601170167899" class="btn btn-secondary btn-lg">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                <path d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
              </svg>
              Get More Info
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Program Details Modal -->
  <div id="program-modal" class="program-modal">
    <div class="modal-overlay"></div>
    <div class="modal-content">
      <div class="modal-header">
        <div class="modal-title-section">
          <h3 id="modal-program-name">Program Name</h3>
          <span id="modal-program-level" class="modal-level">Level</span>
        </div>
        <button class="modal-close" id="modal-close">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
            <path d="M6 6l12 12M6 18L18 6"/>
          </svg>
        </button>
      </div>
      
      <div class="modal-body">
        <div class="modal-description">
          <h4>Program Overview</h4>
          <p id="modal-program-description">Program description will appear here.</p>
        </div>

        <div class="modal-details-grid">
          <div class="modal-section">
            <h4>Key Features</h4>
            <ul id="modal-program-features" class="modal-features-list">
              <!-- Features will be populated dynamically -->
            </ul>
          </div>

          <div class="modal-section">
            <h4>Program Information</h4>
            <div class="modal-info-grid">
              <div class="info-item">
                <span class="info-label">Duration:</span>
                <span id="modal-program-duration" class="info-value">Duration</span>
              </div>
              <div class="info-item">
                <span class="info-label">Level:</span>
                <span id="modal-program-level-info" class="info-value">Level</span>
              </div>
              <div class="info-item" id="modal-program-code-item">
                <span class="info-label">Code:</span>
                <span id="modal-program-code" class="info-value">Code</span>
              </div>
            </div>
          </div>
        </div>

        <div class="modal-modules" id="modal-modules-section">
          <h4>Course Modules</h4>
          <div id="modal-program-modules" class="modules-grid">
            <!-- Modules will be populated dynamically -->
          </div>
        </div>

        <div class="modal-careers" id="modal-careers-section">
          <h4>Career Opportunities</h4>
          <div id="modal-program-careers" class="careers-grid">
            <!-- Career opportunities will be populated dynamically -->
          </div>
        </div>

        <div class="modal-actions">
          <a href="#contact" class="btn btn-primary" id="modal-apply-btn">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
            </svg>
            Apply for This Program
          </a>
          <a href="https://wa.me/601170167899" class="btn btn-secondary" id="modal-info-btn">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
            </svg>
            Get More Information
          </a>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .programs-content {
    max-width: 1200px;
    margin: 0 auto;
  }

  .program-category {
    margin-bottom: var(--space-12);
  }

  .category-header {
    text-align: center;
    margin-bottom: var(--space-8);
  }

  .category-header h3 {
    color: var(--primary-400);
    font-size: 2rem;
    margin-bottom: var(--space-2);
  }

  .category-header p {
    color: var(--gray-400);
    font-size: 1.125rem;
    max-width: 600px;
    margin: 0 auto;
  }

  .programs-grid {
    margin-bottom: var(--space-6);
  }

  .program-card {
    background: var(--gray-800);
    border-radius: 1.5rem;
    overflow: hidden;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3);
    transition: all 0.3s ease;
    border: 1px solid var(--gray-700);
    cursor: pointer;
  }

  .program-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px -8px rgba(0, 0, 0, 0.4);
    border-color: var(--primary-600);
  }

  .program-image {
    position: relative;
    width: 100%;
    height: 240px;
    overflow: hidden;
    background: var(--gray-700);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .program-image img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: center;
    transition: transform 0.3s ease;
    background: white;
  }

  .program-card:hover .program-image img {
    transform: scale(1.02);
  }

  .program-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(224, 43, 109, 0.9), rgba(184, 32, 144, 0.9));
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .program-card:hover .program-overlay {
    opacity: 1;
  }

  .overlay-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--space-2);
    color: white;
    text-align: center;
  }

  .overlay-content span {
    font-weight: 600;
    font-size: 1.125rem;
  }

  .program-content {
    padding: var(--space-6);
  }

  .program-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: var(--space-2);
    gap: var(--space-2);
  }

  .program-header h4 {
    color: var(--gray-100);
    font-size: 1.25rem;
    margin: 0;
    flex: 1;
  }

  .program-level {
    background: linear-gradient(135deg, var(--primary-600), var(--primary-500));
    color: white;
    padding: var(--space-1) var(--space-3);
    border-radius: 0.5rem;
    font-size: 0.75rem;
    font-weight: 600;
    text-align: center;
    line-height: 1.2;
    min-width: fit-content;
    max-width: 160px;
    word-wrap: break-word;
    flex-shrink: 0;
  }

  .program-code {
    margin-bottom: var(--space-2);
  }

  .program-code span {
    color: var(--secondary-400);
    font-size: 0.75rem;
    font-weight: 500;
    background: var(--gray-900);
    padding: var(--space-1) var(--space-2);
    border-radius: 0.375rem;
    border: 1px solid var(--gray-700);
  }

  .program-description {
    color: var(--gray-400);
    margin-bottom: var(--space-4);
    line-height: 1.6;
  }

  .program-features {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
    margin-bottom: var(--space-4);
  }

  .feature-item {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    color: var(--gray-300);
    font-size: 0.875rem;
  }

  .feature-item svg {
    color: var(--primary-400);
    flex-shrink: 0;
  }

  .program-duration {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    color: var(--secondary-400);
    font-weight: 500;
    padding-top: var(--space-3);
    border-top: 1px solid var(--gray-700);
  }

  .program-duration svg {
    color: var(--secondary-400);
  }

  /* PB-PPT Styles */
  .ppt-content {
    max-width: 1000px;
    margin: 0 auto;
  }

  .ppt-card {
    background: var(--gray-800);
    padding: var(--space-8);
    border-radius: 1.5rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3);
    border: 1px solid var(--gray-700);
    text-align: center;
    margin-bottom: var(--space-8);
  }

  .ppt-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100px;
    height: 100px;
    background: linear-gradient(135deg, var(--accent-600), var(--accent-500));
    color: white;
    border-radius: 50%;
    margin: 0 auto var(--space-4);
  }

  .ppt-content-text h4 {
    color: var(--gray-100);
    margin-bottom: var(--space-3);
    font-size: 1.5rem;
  }

  .ppt-content-text p {
    color: var(--gray-400);
    margin-bottom: var(--space-6);
    line-height: 1.6;
  }

  .ppt-features {
    display: flex;
    justify-content: center;
    gap: var(--space-6);
    flex-wrap: wrap;
    margin-bottom: var(--space-6);
  }

  .ppt-feature {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    color: var(--gray-300);
    font-weight: 500;
  }

  .ppt-feature svg {
    color: var(--accent-400);
  }

  /* PB-PPT Programs List Styles */
  .ppt-programs {
    margin-top: var(--space-6);
    padding-top: var(--space-6);
    border-top: 1px solid var(--gray-700);
  }

  .ppt-programs h5 {
    color: var(--accent-400);
    font-size: 1.125rem;
    margin-bottom: var(--space-4);
    font-weight: 600;
  }

  .ppt-programs-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--space-3);
  }

  .ppt-program-item {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-3);
    background: var(--gray-900);
    border-radius: 0.75rem;
    color: var(--gray-300);
    font-size: 0.875rem;
    font-weight: 500;
    transition: all 0.3s ease;
    border: 1px solid var(--gray-700);
  }

  .ppt-program-item:hover {
    background: var(--accent-900);
    border-color: var(--accent-600);
    transform: translateY(-2px);
  }

  .ppt-program-item svg {
    color: var(--accent-400);
    flex-shrink: 0;
  }

  /* PB-PPT Requirements Styles */
  .ppt-requirements {
    background: var(--gray-800);
    padding: var(--space-6);
    border-radius: 1.5rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3);
    border: 1px solid var(--gray-700);
    margin-bottom: var(--space-6);
  }

  .requirements-header h4 {
    color: var(--primary-400);
    margin-bottom: var(--space-4);
    font-size: 1.375rem;
    text-align: center;
  }

  .requirements-list {
    list-style: none;
    display: flex;
    flex-direction: column;
    gap: var(--space-3);
  }

  .requirements-list li {
    position: relative;
    padding-left: var(--space-6);
    color: var(--gray-300);
    line-height: 1.6;
    font-size: 0.95rem;
  }

  .requirements-list li::before {
    content: '✓';
    position: absolute;
    left: 0;
    top: 0;
    color: var(--primary-400);
    font-weight: bold;
    font-size: 1.125rem;
    width: var(--space-4);
    text-align: center;
  }

  /* PB-PPT Table Styles */
  .ppt-table-section {
    background: var(--gray-800);
    padding: var(--space-6);
    border-radius: 1.5rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3);
    border: 1px solid var(--gray-700);
    margin-bottom: var(--space-6);
  }

  .table-header h4 {
    color: var(--secondary-400);
    margin-bottom: var(--space-4);
    font-size: 1.375rem;
    text-align: center;
  }

  .table-container {
    overflow-x: auto;
  }

  .requirements-table {
    width: 100%;
    border-collapse: collapse;
    background: var(--gray-900);
    border-radius: 0.75rem;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }

  .requirements-table th {
    background: linear-gradient(135deg, var(--primary-600), var(--secondary-600));
    color: white;
    padding: var(--space-4);
    text-align: center;
    font-weight: 600;
    font-size: 1rem;
    border-bottom: 2px solid var(--gray-700);
  }

  .requirements-table td {
    padding: var(--space-3);
    border-bottom: 1px solid var(--gray-700);
    color: var(--gray-200);
    text-align: center;
    vertical-align: middle;
  }

  .requirements-table tbody tr:hover {
    background: var(--gray-800);
  }

  .age-cell {
    background: var(--gray-800) !important;
    border-right: 2px solid var(--primary-600);
    padding: var(--space-4) !important;
  }

  .age-group {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--space-2);
  }

  .age-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    background: linear-gradient(135deg, var(--primary-600), var(--primary-500));
    color: white;
    border-radius: 50%;
    margin-bottom: var(--space-1);
  }

  .age-group span {
    color: var(--primary-400);
    font-weight: 600;
    font-size: 0.875rem;
    text-align: center;
  }

  .experience-details {
    display: flex;
    flex-direction: column;
    gap: var(--space-1);
    text-align: left;
  }

  .experience-details div {
    font-size: 0.875rem;
    line-height: 1.4;
  }

  /* Call to Action */
  .programs-cta {
    background: linear-gradient(135deg, var(--primary-600), var(--secondary-600));
    color: white;
    padding: var(--space-8);
    border-radius: 1.5rem;
    text-align: center;
    position: relative;
    overflow: hidden;
  }

  .programs-cta::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="50" cy="50" r="1" fill="rgba(255,255,255,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
    opacity: 0.5;
  }

  .cta-content {
    position: relative;
    z-index: 1;
  }

  .cta-content h3 {
    color: white;
    margin-bottom: var(--space-3);
    font-size: 2rem;
  }

  .cta-content p {
    color: rgba(255, 255, 255, 0.9);
    margin-bottom: var(--space-6);
    font-size: 1.125rem;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .cta-buttons {
    display: flex;
    gap: var(--space-4);
    justify-content: center;
    flex-wrap: wrap;
  }

  .btn-lg {
    padding: var(--space-3) var(--space-6);
    font-size: 1.125rem;
  }

  /* Modal Styles */
  .program-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .program-modal.active {
    opacity: 1;
    visibility: visible;
  }

  .modal-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(4px);
  }

  .modal-content {
    position: relative;
    background: var(--gray-800);
    border-radius: 1.5rem;
    max-width: 90vw;
    max-height: 90vh;
    width: 800px;
    overflow-y: auto;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
    border: 1px solid var(--gray-700);
    transform: scale(0.9);
    transition: transform 0.3s ease;
  }

  .program-modal.active .modal-content {
    transform: scale(1);
  }

  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    padding: var(--space-6);
    border-bottom: 1px solid var(--gray-700);
    gap: var(--space-4);
  }

  .modal-title-section {
    flex: 1;
  }

  .modal-title-section h3 {
    color: var(--gray-100);
    margin-bottom: var(--space-2);
    font-size: 1.75rem;
  }

  .modal-level {
    background: linear-gradient(135deg, var(--primary-600), var(--primary-500));
    color: white;
    padding: var(--space-1) var(--space-3);
    border-radius: 0.75rem;
    font-size: 0.875rem;
    font-weight: 600;
  }

  .modal-close {
    background: var(--gray-700);
    border: none;
    color: var(--gray-300);
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    flex-shrink: 0;
  }

  .modal-close:hover {
    background: var(--gray-600);
    color: white;
    transform: scale(1.1);
  }

  .modal-body {
    padding: var(--space-6);
  }

  .modal-description {
    margin-bottom: var(--space-6);
  }

  .modal-description h4 {
    color: var(--primary-400);
    margin-bottom: var(--space-3);
    font-size: 1.25rem;
  }

  .modal-description p {
    color: var(--gray-300);
    line-height: 1.6;
    margin: 0;
  }

  .modal-details-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-6);
    margin-bottom: var(--space-6);
  }

  .modal-section h4 {
    color: var(--secondary-400);
    margin-bottom: var(--space-3);
    font-size: 1.125rem;
  }

  .modal-features-list {
    list-style: none;
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
  }

  .modal-features-list li {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    color: var(--gray-300);
    font-size: 0.875rem;
  }

  .modal-features-list li::before {
    content: '✓';
    color: var(--primary-400);
    font-weight: bold;
    width: 16px;
    text-align: center;
  }

  .modal-info-grid {
    display: flex;
    flex-direction: column;
    gap: var(--space-3);
  }

  .info-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-2);
    background: var(--gray-900);
    border-radius: 0.5rem;
  }

  .info-label {
    color: var(--gray-400);
    font-size: 0.875rem;
  }

  .info-value {
    color: var(--gray-200);
    font-weight: 500;
    font-size: 0.875rem;
  }

  .modal-modules,
  .modal-careers {
    margin-bottom: var(--space-6);
  }

  .modal-modules h4,
  .modal-careers h4 {
    color: var(--accent-400);
    margin-bottom: var(--space-3);
    font-size: 1.125rem;
  }

  .modules-grid,
  .careers-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--space-2);
  }

  .modules-grid .module-item,
  .careers-grid .career-item {
    background: var(--gray-900);
    padding: var(--space-2);
    border-radius: 0.5rem;
    color: var(--gray-300);
    font-size: 0.875rem;
    text-align: center;
  }

  .modal-actions {
    display: flex;
    gap: var(--space-3);
    justify-content: center;
    padding-top: var(--space-4);
    border-top: 1px solid var(--gray-700);
  }

  .modal-actions .btn {
    flex: 1;
    justify-content: center;
    max-width: 250px;
  }

  @media (max-width: 768px) {
    .programs-grid {
      grid-template-columns: 1fr;
    }

    .program-header {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-2);
    }

    .program-level {
      align-self: flex-start;
      max-width: none;
    }

    .program-image {
      height: 200px;
    }

    .ppt-features {
      flex-direction: column;
      align-items: center;
      gap: var(--space-3);
    }

    .ppt-programs-grid {
      grid-template-columns: 1fr;
    }

    .requirements-table {
      font-size: 0.875rem;
    }

    .requirements-table th,
    .requirements-table td {
      padding: var(--space-2);
    }

    .age-icon {
      width: 40px;
      height: 40px;
    }

    .experience-details {
      text-align: center;
    }

    .cta-buttons {
      flex-direction: column;
      align-items: center;
    }

    .btn-lg {
      width: 100%;
      max-width: 280px;
      justify-content: center;
    }

    .cta-content h3 {
      font-size: 1.5rem;
    }

    .category-header h3 {
      font-size: 1.5rem;
    }

    .modal-content {
      width: 95vw;
      max-height: 95vh;
    }

    .modal-header {
      padding: var(--space-4);
    }

    .modal-body {
      padding: var(--space-4);
    }

    .modal-details-grid {
      grid-template-columns: 1fr;
      gap: var(--space-4);
    }

    .modal-actions {
      flex-direction: column;
    }

    .modal-actions .btn {
      max-width: none;
    }

    .modules-grid,
    .careers-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  import { programs, getProgramById } from '../data/programs.js';

  document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('program-modal');
    const modalClose = document.getElementById('modal-close');
    const modalOverlay = modal.querySelector('.modal-overlay');
    const programCards = document.querySelectorAll('.program-card');

    // Modal elements
    const modalProgramName = document.getElementById('modal-program-name');
    const modalProgramLevel = document.getElementById('modal-program-level');
    const modalProgramLevelInfo = document.getElementById('modal-program-level-info');
    const modalProgramDescription = document.getElementById('modal-program-description');
    const modalProgramFeatures = document.getElementById('modal-program-features');
    const modalProgramDuration = document.getElementById('modal-program-duration');
    const modalProgramCode = document.getElementById('modal-program-code');
    const modalProgramCodeItem = document.getElementById('modal-program-code-item');
    const modalProgramModules = document.getElementById('modal-program-modules');
    const modalProgramCareers = document.getElementById('modal-program-careers');
    const modalModulesSection = document.getElementById('modal-modules-section');
    const modalCareersSection = document.getElementById('modal-careers-section');

    function openModal(programId) {
      const program = getProgramById(programId);
      if (!program) return;

      // Populate modal content
      modalProgramName.textContent = program.name;
      modalProgramLevel.textContent = program.level;
      modalProgramLevelInfo.textContent = program.level;
      modalProgramDescription.textContent = program.longDescription;
      modalProgramDuration.textContent = program.duration;

      // Show/hide program code
      if (program.code) {
        modalProgramCode.textContent = program.code;
        modalProgramCodeItem.style.display = 'flex';
      } else {
        modalProgramCodeItem.style.display = 'none';
      }

      // Populate features
      modalProgramFeatures.innerHTML = '';
      program.features.forEach(feature => {
        const li = document.createElement('li');
        li.textContent = feature;
        modalProgramFeatures.appendChild(li);
      });

      // Populate modules if available
      if (program.modules && program.modules.length > 0) {
        modalProgramModules.innerHTML = '';
        program.modules.forEach(module => {
          const div = document.createElement('div');
          div.className = 'module-item';
          div.textContent = module;
          modalProgramModules.appendChild(div);
        });
        modalModulesSection.style.display = 'block';
      } else {
        modalModulesSection.style.display = 'none';
      }

      // Populate career opportunities if available
      if (program.careerOpportunities && program.careerOpportunities.length > 0) {
        modalProgramCareers.innerHTML = '';
        program.careerOpportunities.forEach(career => {
          const div = document.createElement('div');
          div.className = 'career-item';
          div.textContent = career;
          modalProgramCareers.appendChild(div);
        });
        modalCareersSection.style.display = 'block';
      } else {
        modalCareersSection.style.display = 'none';
      }

      // Show modal
      modal.classList.add('active');
      document.body.style.overflow = 'hidden';
    }

    function closeModal() {
      modal.classList.remove('active');
      document.body.style.overflow = '';
    }

    // Event listeners
    programCards.forEach(card => {
      card.addEventListener('click', function() {
        const programId = this.getAttribute('data-program-id');
        openModal(programId);
      });
    });

    modalClose.addEventListener('click', closeModal);
    modalOverlay.addEventListener('click', closeModal);

    // Close modal with Escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && modal.classList.contains('active')) {
        closeModal();
      }
    });

    // Close modal when clicking action buttons
    const modalApplyBtn = document.getElementById('modal-apply-btn');
    const modalInfoBtn = document.getElementById('modal-info-btn');
    
    modalApplyBtn.addEventListener('click', closeModal);
    modalInfoBtn.addEventListener('click', closeModal);
  });
</script>